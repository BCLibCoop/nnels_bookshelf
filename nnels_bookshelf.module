<?php

define('SLUG', 'bookshelf');

/**
 * Define the bookshelf flag
 *
 */

function nnels_bookshelf_flag_default_flags() {
  $flags = array();
	$flags[SLUG] = array(
	  'entity_type' => 'node',
	  'title' => 'Bookshelf',
	  'global' => FALSE,
	  'types' => array(
	    0 => 'repository_item',
	  ),
	  'roles' => array('2,3,4,5,6,7'),
	  'flag_short' => 'Add to ' . SLUG,
	  'flag_long' => 'Add this item to your ' . SLUG . ' for later',
	  'flag_message' => 'Added!',
	  'unflag_short' => 'Remove from ' . SLUG,
	  'unflag_long' => 'Remove this item from your ' . SLUG,
	  'unflag_message' => 'Removed!',
	  'unflag_denied_text' => '',
	  'link_type' => 'toggle',
	  'weight' => 0,
	  'show_in_links' => array(
	    'full' => 0,
	    'teaser' => 0,
	    'rss' => 0,
	    'search_index' => 0,
	    'search_result' => 0,
	    'token' => 0,
	  ),
	  'show_as_field' => 0,
	  'show_on_form' => 0,
	  'access_author' => '',
	  'show_contextual_link' => 0,
	  'i18n' => 1,
	  'api_version' => 3,
	);
	return $flags;
}


/*
 * Implementation of hook_views_api()
 *
 */

function nnels_bookshelf_views_api() {
  return array('api' => 3.0);
}

/**
 * Implements hook_block_info()
 *
 */

function nnels_bookshelf_block_info() {

	$blocks = array();

  $blocks[SLUG . '_button'] = array(
    'info' => t('My Bookshelf button'),
    'cache' => DRUPAL_CACHE_PER_USER,
    'region' => 'Header',
    'visibility' => 0,
    'weight' => -35,
    );

  return $blocks;
}

/**
 * Implements hook_block_view
 *
 */

function nnels_bookshelf_block_view( $delta = '' ) {
  
  $block = array();

  if ($delta = SLUG . '_button') {
  	global $user;

  	$block['subject'] = '';
  	$block['content'] = "<a href='/user/" . $user->uid . "/" . SLUG  . "'><i class='fa fa-list-alt' alt='My Bookshelf Icon' aria-hidden='true'></i> My Bookshelf</a>";

  	return $block;
  }
}

/**
 * Implements hook_action_info()
 *
 */

function nnels_bookshelf_action_info() {
	return array(
		'nnels_'.SLUG.'_remove_selected_user_flags' => array(
			'type' => 'node',
			'label' => t('Remove bookshelf items.'),
			'configurable' => FALSE,
			'triggers' => array('any'),
			'aggregate' => TRUE,
			'permissions' => array( 'access content' ),
			)

		);
}

//Provides action to remove items from current user's bookshelf
function nnels_bookshelf_remove_selected_user_flags( &$node, $context ) {

	global $user;
	$uid = $user->uid;

	$entity_id = NULL;
	$entity_type = 'node';

 	$flagged_items = flag_get_user_flags( $entity_type, $entity_id, $uid );
    if ( empty($flagged_items) ) return;

    $flag = flag_get_flag( SLUG );

    $nodes_to_unflag = array_intersect_key($node, $flagged_items[SLUG]);

    foreach($nodes_to_unflag as $nid => $obj) {
      $flag->flag('unflag', $nid);
    }

    $message = sprintf("Removed %d items from your %s.", count
    ($nodes_to_unflag), SLUG);
    drupal_set_message($message);
}
